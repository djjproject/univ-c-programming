// 제목: 포인토 함수.
// 기능: 메모리 훔쳐보기.
// 파일이름: 소스.cpp
// 수정날짜: 2013년5월2일
// 작성자: 도정진
// (헤더부분임)


// 프로젝트: 실행파일(xxx.exe)을 만들기 위해 필요한 모든 정보의 집합
// 솔루션: 여러 프로젝터의 집합
// 두개의 슬래쉬는 코멘트를 만드는 기호이다.
// 코멘트: 기계어를 생성하는 과정에서 무시하는 부분

// 컴퓨터의 구조. 메모리 시피유 메모리와 시피유는 버스로 연결
// 컴퓨터의 기능. 메모리에 데이터 쓰기/읽기, 연산, 순서제어  실제로 이 세가지 밖에 없다.



// 보수 음수를 (100-27)-100 꼴로 바꾼다




#include <stdio.h>


int main() {
	// 앞으로 이 윗부분은 무조껀 쓰자.
	int a,b;
	// 변수 선언
	// a는 변수이다, a에는 정수형 값이 저장된다. (4개 메모리 공간 확보, 4바이트)

	int *ppp;
	// 포인터 변수 선언
	// ppp는 포인터 변수이다, ppp가 가리키는 곳에는 정수형 값이 있다.
	// ppp 에는 메모리 첫 주소가 저장된다.


	
	// &a 저장공간 a의 첫번째 메모리 주소 (adress of)
	// *ppp data of , 
	
	
	a=-5;
	ppp=&a;
	b=*ppp;

	// *ppp가 가리키는 메모리에 얼마가 들어있는지 리턴한다. 
	
	// 메모리에는 보수로 저장이 된다. 0xffffffb (반대로)


	printf ("%d\n",b);





	printf("안녕하세요, 저는 도정진이라고 합니다. \n");

	// 세미콜론은 문장의 끝을 말한다.
	// 문장은 프로그램 수행의 기본단위 임.



	// 앞으로 이 아래 부분 쓰자.
}

