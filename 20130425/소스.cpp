// 제목: 변수의 접근범위 연습
// 기능: 변수의 접근 범위, 변수의 존재기간 (scope, lifetime), 매개변수 전달
// 파일이름: 소스.cpp
// 수정날짜: 2013년4월25일
// 작성자: 도정진
// (헤더부분임)


// 프로젝트: 실행파일(xxx.exe)을 만들기 위해 필요한 모든 정보의 집합
// 솔루션: 여러 프로젝터의 집합
// 두개의 슬래쉬는 코멘트를 만드는 기호이다.
// 코멘트: 기계어를 생성하는 과정에서 무시하는 부분

// 컴퓨터의 구조. 메모리 시피유 메모리와 시피유는 버스로 연결
// 컴퓨터의 기능. 메모리에 데이터 쓰기/읽기, 연산, 순서제어  실제로 이 세가지 밖에 없다.


#include <stdio.h>

// 합수: sum()
// 입력: 두개의 정수
// 출력: 정수
// 기능: 두개의 입력을 더해서 그 결과를 반환




int sum (int a,int b) {
	int c;
//	printf("c=%d\n",c);
	c = a + b;
	a = 1000;
	// 이렇게 a 값을 정해준다면 어떻게 되는가?
	return c;
}
// 함수가 불려지는 순간에만 변수가 저장이 된다.
// 함수로 들어가게 되면 int main 의 변수 값을 다른 곳으로 복사를 한다. 그리고 함수 기능이 수행되고
// a를 1000 으로 대입한 후 함수가 끝나면 그대로 사라진다. 그리고 int main의 b 값을 프린트 하게 된다.


// 지역변수: 접근범위가 함수 안인 변수. (local variable)
// 전역변수: (global variable) 사용한다면 감점대상이다. 절대로 사용하면 X



int main() {
// 앞으로 이 윗부분은 무조껀 쓰자.
	
	int a, b=10, c=20;
	a = sum(b,c);
	printf("b=%d\n",b);
	printf("a=%d\n",a);













	printf("안녕하세요, 저는 도정진이라고 합니다. \n");

// 세미콜론은 문장의 끝을 말한다.
// 문장은 프로그램 수행의 기본단위 임.



// 앞으로 이 아래 부분 쓰자.
}

