// 제목: 프로그램 짜는 법
// 기능: 변수, 자료형 설명, 수식(Expression), 연산자의 순서
// 파일이름: source.cpp
// 수정날짜: 2013년3월26일
// 작성자: 도정진
// (헤더부분임)


// 프로젝트: 실행파일(xxx.exe)을 만들기 위해 필요한 모든 정보의 집합
// 솔루션: 여러 프로젝터의 집합
// 두개의 슬래쉬는 코멘트를 만드는 기호이다.
// 코멘트: 기계어를 생성하는 과정에서 무시하는 부분

// 컴퓨터의 구조. 메모리 시피유 메모리와 시피유는 버스로 연결
// 컴퓨터의 기능. 메모리에 데이터 쓰기/읽기, 연산, 순서제어  실제로 이 세가지 밖에 없다.


#include <stdio.h>
int main() {
// 앞으로 이 윗부분은 무조껀 쓰자.

	int a, b;   
	// 변수의 선언부분(a가 변수다!)
	// 변수를 여러개 하고 싶은 경우 콤마 사용
	// 변수: 데이터 저장장소(메모리)
	// 변수의 선언
	// 1. 변수의 이름
	// 2. 변수의 자료형: 변수가 가질 수 있는 값의 범위
	// 변수 a 의 자료형은 int (정수형)
   

	//연산자: 연산을 수행하는 기호 (계산해서 어디 메모리에 저장시켜라)

	a = 10 + 20;  
	// + 1 * / 등은 산술연산자이다.
	// +는 항상 두개의 피 연산자를 가지므로 이항(Binary)연산자라고도 한다.

	a = 10 - 20;
	a = 10 * 20;
	a = 10 / 20; 
	// /몫 연산자

	a = 6 / 20; 
	//(소수점 버리기를 하네!)

	a = 16 / 10; 
	//(그냥 버리네.!)

	a = 26 % 10; 
	// %는 나머지 연산자다.

	a = 100;  
	// = 은 그냥 대입 연산자

	b = (a++); 
	// a에다가 1+ 해서 넣는다. 기호하나 만들어 놓은거
	// ++는 연산자이다. ㅋㅋ 이는 하나만 있어도 됨으로 단항(Unary) 연산자라고 한다.'
	// ++가 뒤에 있을 때, (a++)=100 a의 값을 내 뱉음. 그리고 a는 a++임으로 +1 된다.
	// 리턴하는 것 이외의 기능을 할 경우 Side Effect 부수효과라고 한다. 
	// a++ 는 a의 값을 리턴하고, a에 +1을 한다.

	a = 100;
	b = (++a);
	// 증감연산자
	// a++ 는 a를 리턴하고, a에 1을 더한다. (부수효과)
	// b = a , a = a + 1
	// ++a 는 a에 1을 더해 리턴하고, a에 1을 더한다. (부수효과)
	// b = a + 1 , a = a + 1
	// 이 두줄 쓰는게 빡쳐서 기호를 만듬 ++

	b = (--a); 
	// 이것도 마찬가지의 맥락


	a = 10 + 20 + 30;
	// (10+20)+30 ??? 아니면 10+(20+30) ???
	// + 연산자의 결합순서는 왼쪽에서 오른쪽 이다.

	a = b = 100;
	// 대입 연산자
	// a = (b = 100) ,,, = 연산자는 (대입연산자) 결합순서는 오른쪽에서 왼쪽이다.
	// = 는 우변의 값을 리턴, 우변의 값을 변수의 값으로 저장 (부수효과)

	a = (1 && 0);
	// 1은 참이고 0은 거짓, &&는 AND 기호, & Ampersand

	a = (100 && 200);
	// 논리 연산자
	// C언어에서 0은 거짓을 의미한다. 위식 실제 값은 1
	// 0이 아닌 모든 수는 참을 의미한다.
	// 0아니면 1만 리턴한다. (여기서 부수효과는 없다.)

	a = (100 > 20);
	// 두 수의 관계 연산자
	// 참이면 1 , 거짓이면 0 이 나옴

	a = (100 == 20);
	// 두 수의 관계 연산자.
	// 두 수가 같냐? 같으면 1, 다르면 0
	// 많이 틀림으로 주의를 해야 한다.

	a = 10 + 2 * 3;
	// 연산자의 우선순위
	// 여기서 연산자는 3개 임, 곱하기, 더하기, 대입 연산자 순으로 진행됨

	a = 16 / 2 / 3;
	// 이 경우에는 앞에서 뒤로

	// a = 10 / 0;
	// 이 경우는 어떨까?
	// 0으로는 나누지 못한다.

	a = 10;
	a = 2 == ((3 + 2) > (7 + (2 * (a++))));
	// 이 의미는 a는 2 인데는 나중에 처리하게 된다.
	// 순서는 이렇게 된다. 
	// 참고 http://www.mmlab.net/CProgramming/summary.htm
	// a++ , 2*a++ , 3+2 , 7+2* , 등호처리 , 2== , a=  이런순이다.
	// 이렇게 되면 괄호를 쓰는 것이 편하다. 프로그래밍은 배워서 남 준다.
	// ==에 0이 리턴되고, a = 2 리턴 후 값 비교함. 결과적으로 0 이 나옴.



     



	// 여기에는 순서가 가미 되어 있다. 그냥 순서대로..

	printf("변수 a의 값은 %d입니다. \n",a);
	printf("변수 b의 값은 %d입니다. \n",b);  
	// 변수의 값을 %d 에 넣는다.

	printf("안녕, 나는 도정진이라고 한다.");

// 세미콜론은 문장의 끝을 말한다.
// 문장은 프로그램 수행의 기본단위 임.



// 앞으로 이 아래 부분 쓰자.
}

